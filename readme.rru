# directories:
# - /compile/doc/chromeos - the files in this dir
# - /compile/source/linux-chromeos-rru - the kernel sources checked out from gitrepo
# - /compile/result/chromeos - the resulting kernel, modules etc. tar.gz files
# - /compile/doc/kernel-config-options - https://github.com/hexdump0815/kernel-config-options
# name: rru-137 - rauru 137

# IMPORTANT: this is work in progress and not yet ready to use!
# status: not yet known

# INFO: based on the tree commit: 173b349f22777bc28e29dbdcfafd70224b7824be
#                    from branch: release-R137-16267.B-chromeos-6.6

cd /compile/source/linux-chromeos-rru

# patches:
# add some hacks to avoid compilations errors due to strict warnings
patch -p1 < /compile/doc/chromeos/misc.rru/patches/some-compilation-hacks.patch

export ARCH=arm64
scripts/kconfig/merge_config.sh -m /compile/doc/chromeos/misc.rru/misc/config-navi-cros-adjusted /compile/doc/kernel-config-options/docker-options.cfg /compile/doc/kernel-config-options/options-to-remove-generic.cfg /compile/doc/chromeos/misc.rru/options/options-to-remove-special.cfg /compile/doc/kernel-config-options/additional-options-generic.cfg /compile/doc/kernel-config-options/additional-options-aarch64.cfg /compile/doc/chromeos/misc.rru/options/additional-options-special.cfg
( cd /compile/doc/kernel-config-options ; git rev-parse --verify HEAD ) > /compile/doc/chromeos/misc.rru/options/kernel-config-options.version
make olddefconfig
make -j 8 Image dtbs modules
cd tools/perf
# without this it would fail on warnings
export WERROR=0
make
cd ../power/cpupower
make
cd ../../..
export kver=`make kernelrelease`
echo ${kver}
# remove debug info if there and not wanted
#find . -type f -name '*.ko' | sudo xargs -n 1 objcopy --strip-unneeded
make modules_install
mkdir -p /lib/modules/${kver}/tools
cp -v tools/perf/perf /lib/modules/${kver}/tools
cp -v tools/power/cpupower/cpupower /lib/modules/${kver}/tools
cp -v tools/power/cpupower/libcpupower.so.0.0.1 /lib/modules/${kver}/tools/libcpupower.so.0
# make headers_install INSTALL_HDR_PATH=/usr
cp -v .config /boot/config-${kver}
cp -v arch/arm64/boot/Image /boot/Image-${kver}
mkdir -p /boot/dtb-${kver}
cp -v arch/arm64/boot/dts/mediatek/mt8196*.dtb /boot/dtb-${kver}
cp -v System.map /boot/System.map-${kver}
# start chromebook special - required: apt-get install liblz4-tool vboot-kernel-utils
cp arch/arm64/boot/Image Image
lz4 -f Image Image.lz4
cp /compile/doc/chromeos/misc.rru/misc/cmdline cmdline
# for console via usb srial adapter - see: https://github.com/Sonicadvance1/linux/issues/27#issuecomment-823668871
# cp /compile/doc/chromeos/misc.rru/misc/cmdline.usb cmdline
dd if=/dev/zero of=bootloader.bin bs=512 count=1
ls arch/arm64/boot/dts/mediatek/mt8196-*.dtb | xargs printf " -b %s" | xargs mkimage -D "-I dts -O dtb -p 2048" -f auto -A arm64 -O linux -T kernel -C lz4 -a 0 -d Image.lz4 kernel.itb
vbutil_kernel --pack vmlinux.kpart --keyblock /usr/share/vboot/devkeys/kernel.keyblock --signprivate /usr/share/vboot/devkeys/kernel_data_key.vbprivk --version 1 --config cmdline --bootloader bootloader.bin --vmlinuz kernel.itb --arch arm
cp -v vmlinux.kpart /boot/vmlinux.kpart-${kver}
rm -f Image Image.lz4 cmdline bootloader.bin kernel.itb vmlinux.kpart
# end chromebook special
cd /boot
update-initramfs -c -k ${kver}
#mkimage -A arm64 -O linux -T ramdisk -a 0x0 -e 0x0 -n initrd.img-${kver} -d initrd.img-${kver} uInitrd-${kver}
tar cvzf /compile/source/linux-chromeos-rru/${kver}.tar.gz /boot/*-${kver} /lib/modules/${kver}
cp -v /compile/doc/chromeos/config.rru /compile/doc/chromeos/config.rru.old
cp -v /compile/source/linux-chromeos-rru/.config /compile/doc/chromeos/config.rru
cp -v /compile/source/linux-chromeos-rru/.config /compile/doc/chromeos/config.rru-${kver}
cp -v /compile/source/linux-chromeos-rru/*.tar.gz /compile/result/chromeos
